package authentication

import (
	"github.com/rhine-tech/scene"
	"gorm.io/gorm/schema"
)

const Lens scene.ModuleName = "authentication"

type User struct {
	// UserID unique id. should be generated by server.
	UserID string `json:"user_id" bson:"user_id" gorm:"primaryKey"`
	// Username unique name. should be unique. should be input by user. but can be changed
	Username string `json:"username" bson:"username" gorm:"uniqueIndex"`
	// Password just password. for now, store in plain text
	Password string `json:"password" bson:"password"`
	// Email user's email address
	Email string `json:"email" bson:"email"`
	// DisplayName extra information, can be empty
	DisplayName string `json:"display_name" bson:"display_name"`
	// Avatar extra information, can be empty
	Avatar string `json:"avatar" bson:"avatar"`
	// Timezone extra information, can be empty
	Timezone string `json:"timezone" bson:"timezone"`
}

func (u User) TableName(namer schema.Namer) string {
	return Lens.TableName("users")
}

type LoginStatus struct {
	UserID   string `json:"user_id"`
	Token    string `json:"token"`
	Verifier string `json:"verifier"`
	ExpireAt int64  `json:"expire_at"`
}

type ExternalAccount struct {
	// UserID is the unique identifier for external user_id
	UserID string `json:"user_id" bson:"user_id"`
	// Token is the access token, external service should find a way to
	// marshal their token into a single string.
	Token string `json:"token" bson:"token"`
	// ExternalID is the platform name for external platform
	ExternalID string `json:"external_id" bson:"external_id"`
	// SceneID is the user id used in authentication module
	SceneID string `json:"scene_id" bson:"scene_id"`
}

type AccessToken struct {
	// Token 是唯一的令牌字符串，建议作为数据库主键
	Token string `json:"token" bson:"_id" gorm:"primaryKey"`
	// UserID 是此令牌所属用户的ID
	UserID string `json:"user_id" bson:"user_id"`
	// Name 是用户为令牌设置的友好名称，方便管理（例如 "My CLI Token"）
	Name string `json:"name" bson:"name"`
	// CreatedAt 是令牌的创建时间
	CreatedAt int64 `json:"created_at" bson:"created_at"`
	// ExpiredAt 是过期时间 -1 代表永不过期
	ExpireAt int64 `json:"expire_at" bson:"expire_at"`
}

func (u AccessToken) TableName(namer schema.Namer) string {
	return Lens.TableName("access_tokens")
}
