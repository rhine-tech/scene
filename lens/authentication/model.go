package authentication

type User struct {
	// UserID unique id. should be generated by server.
	UserID string `json:"user_id" bson:"user_id"`
	// Username unique name. should be unique. should be input by user. but can be changed
	Username string `json:"username" bson:"username"`
	// Password just password. for now, store in plain text
	Password string `json:"password" bson:"password"`
	// Email user's email address
	Email string `json:"email" bson:"email"`
	// DisplayName extra information, can be empty
	DisplayName string `json:"display_name" bson:"display_name"`
	// Avatar extra information, can be empty
	Avatar string `json:"avatar" bson:"avatar"`
	// Timezone extra information, can be empty
	Timezone string `json:"timezone" bson:"timezone"`
}

type LoginStatus struct {
	UserID   string `json:"user_id"`
	Token    string `json:"token"`
	Verifier string `json:"verifier"`
	ExpireAt int64  `json:"expire_at"`
}

type ExternalAccount struct {
	// UserID is the unique identifier for external user_id
	UserID string `json:"user_id" bson:"user_id"`
	// Token is the access token, external service should find a way to
	// marshal their token into a single string.
	Token string `json:"token" bson:"token"`
	// ExternalID is the platform name for external platform
	ExternalID string `json:"external_id" bson:"external_id"`
	// SceneID is the user id used in authentication module
	SceneID string `json:"scene_id" bson:"scene_id"`
}
